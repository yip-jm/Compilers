< 98 , #include <stdio.h> >
< 98 , #include <stdlib.h> >
< 98 , #include <string.h> >
< 97 , #define CNT 1000 >
< 14 , struct >
< 0  , node >
< 75 , { >
< 8  , float >
< 0  , num >
< 78 , ; >
< 6  , char >
< 0  , op >
< 78 , ; >
< 76 , } >
< 78 , ; >
< 14 , struct >
< 0  , node >
< 0  , datas >
< 73 , [ >
< 0  , CNT >
< 74 , ] >
< 78 , ; >
< 96 , COMMENT >
< 7  , int >
< 0  , data_top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 96 , COMMENT >
< 6  , char >
< 0  , ops >
< 73 , [ >
< 0  , CNT >
< 74 , ] >
< 78 , ; >
< 96 , COMMENT >
< 7  , int >
< 0  , op_top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 96 , COMMENT >
< 6  , char >
< 0  , nums >
< 73 , [ >
< 3  , 100 >
< 74 , ] >
< 78 , ; >
< 96 , COMMENT >
< 7  , int >
< 0  , num_top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 96 , COMMENT >
< 96 , COMMENT >
< 5  , void >
< 0  , push_num >
< 71 , ( >
< 72 , ) >
< 75 , { >
< 29 , if >
< 71 , ( >
< 0  , num_top >
< 46 , > >
< 3  , -1 >
< 72 , ) >
< 75 , { >
< 0  , datas >
< 73 , [ >
< 42 , ++ >
< 0  , data_top >
< 74 , ] >
< 86 , . >
< 0  , num >
< 53 , = >
< 0  , atof >
< 71 , ( >
< 0  , nums >
< 72 , ) >
< 78 , ; >
< 0  , datas >
< 73 , [ >
< 0  , data_top >
< 74 , ] >
< 86 , . >
< 0  , op >
< 53 , = >
< 3  , 0 >
< 78 , ; >
< 0  , num_top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 0  , memset >
< 71 , ( >
< 0  , nums >
< 77 , , >
< 3  , 0 >
< 77 , , >
< 18 , sizeof >
< 71 , ( >
< 0  , nums >
< 72 , ) >
< 72 , ) >
< 78 , ; >
< 76 , } >
< 76 , } >
< 96 , COMMENT >
< 5  , void >
< 0  , mtoe >
< 71 , ( >
< 24 , const >
< 6  , char >
< 39 , * >
< 0  , str >
< 72 , ) >
< 75 , { >
< 6  , char >
< 39 , * >
< 0  , tmp >
< 78 , ; >
< 0  , tmp >
< 53 , = >
< 71 , ( >
< 6  , char >
< 39 , * >
< 72 , ) >
< 0  , str >
< 78 , ; >
< 34 , while >
< 71 , ( >
< 39 , * >
< 0  , tmp >
< 45 , != >
< 80 , ' >
< 99 , \ >
< 3  , 0 >
< 80 , ' >
< 72 , ) >
< 75 , { >
< 6  , char >
< 0  , ch >
< 53 , = >
< 39 , * >
< 0  , tmp >
< 78 , ; >
< 42 , ++ >
< 0  , tmp >
< 78 , ; >
< 29 , if >
< 71 , ( >
< 0  , ch >
< 44 , == >
< 1  , ' ' >
< 72 , ) >
< 25 , continue >
< 78 , ; >
< 29 , if >
< 71 , ( >
< 0  , ch >
< 44 , == >
< 1  , '+' >
< 51 , || >
< 0  , ch >
< 44 , == >
< 1  , '-' >
< 51 , || >
< 0  , ch >
< 44 , == >
< 1  , '*' >
< 51 , || >
< 0  , ch >
< 44 , == >
< 1  , '/' >
< 51 , || >
< 0  , ch >
< 44 , == >
< 1  , '(' >
< 72 , ) >
< 75 , { >
< 0  , push_num >
< 71 , ( >
< 72 , ) >
< 78 , ; >
< 29 , if >
< 71 , ( >
< 0  , op_top >
< 46 , > >
< 3  , -1 >
< 72 , ) >
< 75 , { >
< 6  , char >
< 0  , op >
< 53 , = >
< 0  , ops >
< 73 , [ >
< 0  , op_top >
< 74 , ] >
< 78 , ; >
< 29 , if >
< 71 , ( >
< 71 , ( >
< 0  , op >
< 44 , == >
< 1  , '*' >
< 51 , || >
< 0  , op >
< 44 , == >
< 1  , '/' >
< 72 , ) >
< 50 , && >
< 71 , ( >
< 0  , ch >
< 44 , == >
< 1  , '+' >
< 51 , || >
< 0  , ch >
< 44 , == >
< 1  , '-' >
< 72 , ) >
< 72 , ) >
< 75 , { >
< 96 , COMMENT >
< 0  , datas >
< 73 , [ >
< 42 , ++ >
< 0  , data_top >
< 74 , ] >
< 86 , . >
< 0  , op >
< 53 , = >
< 0  , op >
< 78 , ; >
< 43 , -- >
< 0  , op_top >
< 78 , ; >
< 76 , } >
< 76 , } >
< 0  , ops >
< 73 , [ >
< 42 , ++ >
< 0  , op_top >
< 74 , ] >
< 53 , = >
< 0  , ch >
< 78 , ; >
< 76 , } >
< 30 , else >
< 29 , if >
< 71 , ( >
< 0  , ch >
< 44 , == >
< 1  , ')' >
< 72 , ) >
< 75 , { >
< 0  , push_num >
< 71 , ( >
< 72 , ) >
< 78 , ; >
< 34 , while >
< 71 , ( >
< 0  , ops >
< 73 , [ >
< 0  , op_top >
< 74 , ] >
< 45 , != >
< 1  , '(' >
< 72 , ) >
< 75 , { >
< 0  , datas >
< 73 , [ >
< 42 , ++ >
< 0  , data_top >
< 74 , ] >
< 86 , . >
< 0  , op >
< 53 , = >
< 0  , ops >
< 73 , [ >
< 0  , op_top >
< 74 , ] >
< 78 , ; >
< 43 , -- >
< 0  , op_top >
< 78 , ; >
< 76 , } >
< 43 , -- >
< 0  , op_top >
< 78 , ; >
< 76 , } >
< 30 , else >
< 75 , { >
< 0  , nums >
< 73 , [ >
< 42 , ++ >
< 0  , num_top >
< 74 , ] >
< 53 , = >
< 0  , ch >
< 78 , ; >
< 76 , } >
< 76 , } >
< 96 , COMMENT >
< 0  , push_num >
< 71 , ( >
< 72 , ) >
< 78 , ; >
< 96 , COMMENT >
< 34 , while >
< 71 , ( >
< 0  , op_top >
< 46 , > >
< 3  , -1 >
< 72 , ) >
< 75 , { >
< 96 , COMMENT >
< 0  , datas >
< 73 , [ >
< 42 , ++ >
< 0  , data_top >
< 74 , ] >
< 86 , . >
< 0  , op >
< 53 , = >
< 0  , ops >
< 73 , [ >
< 0  , op_top >
< 74 , ] >
< 78 , ; >
< 43 , -- >
< 0  , op_top >
< 78 , ; >
< 76 , } >
< 76 , } >
< 96 , COMMENT >
< 8  , float >
< 0  , calculating >
< 71 , ( >
< 72 , ) >
< 75 , { >
< 29 , if >
< 71 , ( >
< 0  , data_top >
< 47 , < >
< 3  , 0 >
< 72 , ) >
< 28 , return >
< 3  , 0 >
< 78 , ; >
< 8  , float >
< 0  , stack >
< 73 , [ >
< 0  , CNT >
< 74 , ] >
< 53 , = >
< 75 , { >
< 3  , 0 >
< 76 , } >
< 78 , ; >
< 7  , int >
< 0  , top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 7  , int >
< 0  , i >
< 53 , = >
< 3  , 0 >
< 78 , ; >
< 34 , while >
< 71 , ( >
< 0  , i >
< 49 , <= >
< 0  , data_top >
< 72 , ) >
< 75 , { >
< 6  , char >
< 0  , op >
< 53 , = >
< 0  , datas >
< 73 , [ >
< 0  , i >
< 74 , ] >
< 86 , . >
< 0  , op >
< 78 , ; >
< 29 , if >
< 71 , ( >
< 0  , op >
< 44 , == >
< 3  , 0 >
< 72 , ) >
< 75 , { >
< 0  , stack >
< 73 , [ >
< 42 , ++ >
< 0  , top >
< 74 , ] >
< 53 , = >
< 0  , datas >
< 73 , [ >
< 0  , i >
< 74 , ] >
< 86 , . >
< 0  , num >
< 78 , ; >
< 76 , } >
< 30 , else >
< 75 , { >
< 8  , float >
< 0  , a >
< 53 , = >
< 0  , stack >
< 73 , [ >
< 0  , top >
< 3  , -1 >
< 74 , ] >
< 78 , ; >
< 8  , float >
< 0  , b >
< 53 , = >
< 0  , stack >
< 73 , [ >
< 0  , top >
< 74 , ] >
< 78 , ; >
< 43 , -- >
< 0  , top >
< 78 , ; >
< 8  , float >
< 0  , c >
< 53 , = >
< 3  , 0 >
< 78 , ; >
< 29 , if >
< 71 , ( >
< 0  , op >
< 44 , == >
< 1  , '+' >
< 72 , ) >
< 0  , c >
< 53 , = >
< 0  , a >
< 37 , + >
< 0  , b >
< 78 , ; >
< 30 , else >
< 29 , if >
< 71 , ( >
< 0  , op >
< 44 , == >
< 1  , '-' >
< 72 , ) >
< 0  , c >
< 53 , = >
< 0  , a >
< 38 , - >
< 0  , b >
< 78 , ; >
< 30 , else >
< 29 , if >
< 71 , ( >
< 0  , op >
< 44 , == >
< 1  , '*' >
< 72 , ) >
< 0  , c >
< 53 , = >
< 0  , a >
< 39 , * >
< 0  , b >
< 78 , ; >
< 30 , else >
< 29 , if >
< 71 , ( >
< 0  , op >
< 44 , == >
< 1  , '/' >
< 72 , ) >
< 0  , c >
< 53 , = >
< 0  , a >
< 40 , / >
< 0  , b >
< 78 , ; >
< 0  , stack >
< 73 , [ >
< 0  , top >
< 74 , ] >
< 53 , = >
< 0  , c >
< 78 , ; >
< 76 , } >
< 42 , ++ >
< 0  , i >
< 78 , ; >
< 76 , } >
< 29 , if >
< 71 , ( >
< 0  , top >
< 47 , < >
< 3  , 0 >
< 72 , ) >
< 28 , return >
< 3  , 0 >
< 78 , ; >
< 30 , else >
< 28 , return >
< 0  , stack >
< 73 , [ >
< 0  , top >
< 74 , ] >
< 78 , ; >
< 76 , } >
< 7  , int >
< 4  , main >
< 71 , ( >
< 7  , int >
< 0  , argc >
< 77 , , >
< 6  , char >
< 39 , * >
< 0  , argv >
< 73 , [ >
< 74 , ] >
< 72 , ) >
< 75 , { >
< 6  , char >
< 39 , * >
< 0  , parms >
< 53 , = >
< 2  , "20.5+(100-(3+2)*8)/(8-5) - 10" >
< 78 , ; >
< 0  , memset >
< 71 , ( >
< 0  , datas >
< 77 , , >
< 3  , 0 >
< 77 , , >
< 18 , sizeof >
< 71 , ( >
< 0  , datas >
< 72 , ) >
< 72 , ) >
< 78 , ; >
< 0  , memset >
< 71 , ( >
< 0  , ops >
< 77 , , >
< 3  , 0 >
< 77 , , >
< 18 , sizeof >
< 71 , ( >
< 0  , ops >
< 72 , ) >
< 72 , ) >
< 78 , ; >
< 0  , data_top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 0  , op_top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 0  , num_top >
< 53 , = >
< 3  , -1 >
< 78 , ; >
< 0  , mtoe >
< 71 , ( >
< 0  , parms >
< 72 , ) >
< 78 , ; >
< 82 , printf >
< 71 , ( >
< 2  , "%s = " >
< 77 , , >
< 0  , parms >
< 72 , ) >
< 78 , ; >
< 82 , printf >
< 71 , ( >
< 2  , "%f\n" >
< 77 , , >
< 0  , calculating >
< 71 , ( >
< 72 , ) >
< 72 , ) >
< 78 , ; >
< 7  , int >
< 0  , i >
< 53 , = >
< 3  , 0 >
< 78 , ; >
< 36 , for >
< 71 , ( >
< 0  , i >
< 53 , = >
< 3  , 0 >
< 78 , ; >
< 0  , i >
< 49 , <= >
< 0  , data_top >
< 78 , ; >
< 0  , i >
< 42 , ++ >
< 72 , ) >
< 75 , { >
< 29 , if >
< 71 , ( >
< 0  , datas >
< 73 , [ >
< 0  , i >
< 74 , ] >
< 86 , . >
< 0  , op >
< 72 , ) >
< 82 , printf >
< 71 , ( >
< 2  , "%c " >
< 77 , , >
< 0  , datas >
< 73 , [ >
< 0  , i >
< 74 , ] >
< 86 , . >
< 0  , op >
< 72 , ) >
< 78 , ; >
< 30 , else >
< 82 , printf >
< 71 , ( >
< 2  , "%f " >
< 77 , , >
< 0  , datas >
< 73 , [ >
< 0  , i >
< 74 , ] >
< 86 , . >
< 0  , num >
< 72 , ) >
< 78 , ; >
< 76 , } >
< 82 , printf >
< 71 , ( >
< 2  , "\n" >
< 72 , ) >
< 78 , ; >
< 28 , return >
< 3  , 0 >
< 78 , ; >
< 76 , } >
